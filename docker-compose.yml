services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: avaliaif
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # - ./scripts/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
  avaliaif-frontend:
    build:
      context: ./apps/avaliaif-frontend
      dockerfile: Dockerfile
    container_name: avaliaif-frontend
    environment:
      - NODE_ENV=development
    ports:
      - "5173:5173"
    volumes:
      - ./apps/avaliaif-frontend:/app
      - /app/node_modules
  avaliaif-backend:
    build:
      context: ./apps/avaliaif-backend
      dockerfile: Dockerfile
    container_name: avaliaif-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/avaliaif
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"
    volumes:
      - maven-repo:/root/.m2
      - uploaded-files:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
volumes:
  pgdata:
  maven-repo:
  uploaded-files: